rm(list=ls())

library(tidyverse)
library(readxl)
library(dplyr)
library(zoo)
library(lubridate)
library(reshape)
library(data.table)
library(reshape2)
library(plyr)
library(rollRegres)
library(fastDummies)
library(janitor)
library(lubridate)
library(janitor)
library(roll)
library(testthat)
library(xts)
library(openxlsx)

setwd("PATH")

# Load Data
data <- read.xlsx("Data for Peer Event Study.xlsx")
mydata <- data

#Create an empty dataframe
regression_results <- data.frame(
  start_position = numeric(),
  end_position = numeric(),
  intercept = numeric(),
  market_coef = numeric(),
  industry_coef = numeric(),
  intercept_se = numeric(),
  market_se = numeric(),
  industry_se = numeric(),
  intercept_tval = numeric(),
  market_tval = numeric(),
  industry_tval = numeric(),
  intercept_pval = numeric(),
  market_pval = numeric(),
  industry_pval = numeric(),
  n_obs = numeric(),
  rmse = numeric(),
  rse = numeric(),
  r_sqr = numeric(),
  adj_r_sqr = numeric()
)


# Loop through each row in mydata 

for (i in 1:nrow(mydata)) {
  # Subset the data using start and end positions from the current row
  subset_data <- mydata %>%
    filter(row >= mydata$start_position[i] & row <= mydata$end_position[i])
  
  # Keep only when nye_dates = 0
  subset_data_filter <- subset_data %>%
    filter(nye_dates == 0)
  #print(unique(nrow(subset_data_filter)))
  
  # Run the regression to get industry residuals on the subset
  residual_reg <- lm(APA_Index ~ SP500, subset_data_filter)
  subset_data_filter["yhat"] <- fitted.values(residual_reg)
  subset_data_filter["residual"] <- subset_data_filter["APA_Index"] - subset_data_filter["yhat"] 
  
  # Regress company returns on industry excess returns, sp500
  model <- lm(PRC_APA ~ SP500 + residual, subset_data_filter)
  
  # Store the results in the regression_results data frame
  regression_results <- regression_results %>%
    add_row(
      start_position = mydata$start_position[i],
      end_position = mydata$end_position[i],
      intercept = coef(model)[1],
      market_coef = coef(model)[2],
      industry_coef = coef(model)[3],
      intercept_se = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[1, 2], NA),
      market_se = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[2, 2], NA),
      industry_se = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[3, 2], NA),
      intercept_tval = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[1, 3], NA),
      market_tval = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[2, 3], NA),
      industry_tval = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[3, 3], NA),
      intercept_pval = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[1, 4], NA),
      market_pval = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[2, 4], NA),
      industry_pval = ifelse(length(coef(model)) >= 2, summary(model)$coefficients[3, 4], NA),
      n_obs = nrow(subset_data_filter),
      rse = sigma(model),
      r_sqr = summary(model)$r.squared,
      adj_r_sqr = summary(model)$adj.r.squared
    )
}
  
# Create unique row identifier and add it as a column to regression_results
row <- as.data.frame(list(1:nrow(data)))
colnames(row)[1] <- "row"
regression_results <- cbind(regression_results, row)

# Merge my_data and regression_results to get a new df 'output'
output <- merge(data, regression_results, by="row")

# Drop cols that are repeated
drop = c("row", "start_position.x", "start_position.y", "end_position.x", "end_position.y")

output <- output%>%
  mutate(yhat = intercept + market_coef*SP500 + industry_coef*APA_ind_residual)%>%
  mutate(excess_returns = PRC_APA - yhat)%>%
  select(-all_of(drop))  

write.xlsx(as.data.frame(output), file = "Nye Results.xlsx")

